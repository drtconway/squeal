#ifndef SQUEAL_GRAMMAR_FWD_DECLS_HPP
#define SQUEAL_GRAMMAR_FWD_DECLS_HPP

namespace squeal
{
    namespace grammar
    {
        struct SQL_language_character;
        struct SQL_language_identifier_part;
        struct SQL_language_identifier_start;
        struct SQL_language_identifier;
        struct SQL_special_character;
        struct SQL_terminal_character;
        struct SQL_client_module_definition;
        struct SQL_client_module_name;
        struct actual_identifier;
        struct alphabetic_character;
        struct alternate_underscore;
        struct ampersand;
        struct approximate_numeric_literal;
        struct approximate_numeric_type;
        struct array_specification;
        struct asterisk;
        struct authorization_identifier;
        struct binary_large_object_string_type;
        struct binary_string_literal;
        struct bit_string_literal;
        struct bit_string_type;
        struct bit;
        struct boolean_literal;
        struct boolean_type;
        struct bracketed_comment_contents;
        struct bracketed_comment_introducer;
        struct bracketed_comment_terminator;
        struct bracketed_comment;
        struct catalog_name;
        struct character_representation;
        struct character_set_name;
        struct character_set_specification;
        struct character_string_literal;
        struct character_string_type;
        struct circumflex;
        struct collate_clause;
        struct collation_name;
        struct collection_type_constructor;
        struct collection_type;
        struct colon;
        struct column_constraint_definition;
        struct column_definition;
        struct column_name;
        struct column_options;
        struct comma;
        struct comment_character;
        struct comment;
        struct connector_character;
        struct current_date_value_function;
        struct current_local_time_value_function;
        struct current_local_timestamp_value_function;
        struct current_time_value_function;
        struct current_timestamp_value_function;
        struct data_type;
        struct date_literal;
        struct date_string;
        struct date_value;
        struct datetime_literal;
        struct datetime_type;
        struct datetime_value_function;
        struct datetime_value;
        struct day_time_interval;
        struct day_time_literal;
        struct days_value;
        struct decimal_digit_character;
        struct default_clause;
        struct default_option;
        struct delimited_identifier_body;
        struct delimited_identifier_part;
        struct delimited_identifier;
        struct digit;
        struct domain_name;
        struct double_quote;
        struct doublequote_symbol;
        struct empty_specification;
        struct end_field;
        struct equals_operator;
        struct exact_numeric_literal;
        struct exact_numeric_type;
        struct exponent;
        struct extender_character;
        struct field_definition;
        struct field_name;
        struct general_literal;
        struct greater_than_operator;
        struct group_name;
        struct group_specification;
        struct hex_string_literal;
        struct hexit;
        struct hours_value;
        struct identifier_body;
        struct identifier_combining_character;
        struct identifier_ignorable_character;
        struct identifier_part;
        struct identifier_start;
        struct identifier;
        struct ideographic_character;
        struct implementation_defined_character_set_name;
        struct implicitly_typed_value_specification;
        struct initial_alphabetic_character;
        struct interval_fractional_seconds_precision;
        struct interval_leading_field_precision;
        struct interval_literal;
        struct interval_qualifier;
        struct interval_string;
        struct interval_type;
        struct introducer;
        struct language_clause;
        struct language_name;
        struct large_object_length_token;
        struct large_object_length;
        struct left_brace;
        struct left_bracket_or_trigraph;
        struct left_bracket_trigraph;
        struct left_bracket;
        struct left_paren;
        struct length;
        struct less_than_operator;
        struct like_clause;
        struct literal;
        struct local_or_schema_qualified_name;
        struct local_or_schema_qualifier;
        struct mantissa;
        struct minus_sign;
        struct minutes_value;
        struct module_authorization_clause;
        struct module_authorization_identifier;
        struct module_character_set_specification;
        struct module_contents;
        struct module_name_clause;
        struct module_path_specification;
        struct module_transform_group_specification;
        struct months_value;
        struct multiple_group_specification;
        struct multiplier;
        struct national_character_string_literal;
        struct national_character_string_type;
        struct newline;
        struct non_second_primary_datetime_field;
        struct nondoublequote_character;
        struct nonquote_character;
        struct null_specification;
        struct numeric_type;
        struct path_specification;
        struct percent;
        struct period;
        struct plus_sign;
        struct precision;
        struct predefined_type;
        struct qualified_identifier;
        struct question_mark;
        struct quote_symbol;
        struct quote;
        struct reference_scope_check_action;
        struct reference_scope_check;
        struct reference_type;
        struct referenced_type;
        struct referential_action;
        struct regular_identifier;
        struct right_brace;
        struct right_bracket_or_trigraph;
        struct right_bracket_trigraph;
        struct right_bracket;
        struct right_paren;
        struct role_name;
        struct row_type_body;
        struct row_type;
        struct scale;
        struct schema_name_list;
        struct schema_name;
        struct schema_qualified_name;
        struct schema_qualified_type_name;
        struct scope_clause;
        struct seconds_fraction;
        struct seconds_integer_value;
        struct seconds_value;
        struct self_referencing_column_specification;
        struct semicolon;
        struct separator;
        struct sign;
        struct signed_integer;
        struct signed_numeric_literal;
        struct simple_Latin_letter;
        struct simple_Latin_lower_case_letter;
        struct simple_Latin_upper_case_letter;
        struct simple_comment_introducer;
        struct simple_comment;
        struct single_datetime_field;
        struct single_group_specification;
        struct slash;
        struct solidus;
        struct space;
        struct standard_character_set_name;
        struct start_field;
        struct table_commit_action;
        struct table_constraint_definition;
        struct table_element_list;
        struct table_element;
        struct table_name;
        struct temporary_table_declaration;
        struct time_fractional_seconds_precision;
        struct time_interval;
        struct time_literal;
        struct time_precision;
        struct time_string;
        struct time_value;
        struct time_zone_interval;
        struct timestamp_literal;
        struct timestamp_precision;
        struct timestamp_string;
        struct transform_group_specification;
        struct underscore;
        struct unqualified_schema_name;
        struct unquoted_date_string;
        struct unquoted_interval_string;
        struct unquoted_time_string;
        struct unquoted_timestamp_string;
        struct unsigned_integer;
        struct unsigned_numeric_literal;
        struct user_identifier;
        struct user_defined_character_set_name;
        struct user_defined_type_name;
        struct user_defined_type;
        struct vertical_bar;
        struct white_space;
        struct with_or_without_time_zone;
        struct year_month_literal;
        struct years_value;
    }
    // namespace grammar
}
// namespace squeal

#endif // SQUEAL_GRAMMAR_FWD_DECLS_HPP
